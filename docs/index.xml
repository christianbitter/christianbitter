<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Christian Bitter</title>
    <link>https://christianbitter.github.io/</link>
    <description>Recent content on Christian Bitter</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 08 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://christianbitter.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Elisa - Animation</title>
      <link>https://christianbitter.github.io/post/2020-11-08-elisa-animation/</link>
      <pubDate>Sun, 08 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://christianbitter.github.io/post/2020-11-08-elisa-animation/</guid>
      <description>Hello Elisa fans. Today&amp;rsquo;s post is about one of the latest examples, that we added to the repository. This example, elisa_7_sprite_animation is basically an abstraction and cleanup of some of our past endeavors.
Specifically, we introduced types dealing with sprites like the individual sprite, which is basically the collection of attributes defining some piece of graphics on the game screen. Critically, sprites are defined in terms of an underlying image container like a jpg or png file.</description>
    </item>
    
    <item>
      <title>Elisa - Pygame Initialization Example</title>
      <link>https://christianbitter.github.io/post/elisa-pygame-initialization-example.en-us/</link>
      <pubDate>Sun, 25 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://christianbitter.github.io/post/elisa-pygame-initialization-example.en-us/</guid>
      <description>Dear readership todayâ€™s update is focused on our Python game programming series called Elisa.While the last time we actually had a peek into how large game systems can be organized following a data-oriented approach, using the Entity-Component-System Pattern, today we are going to stuff a whole that has been sitting in thisseries since its inception. That is, our series started with a ready-to-use python code template that simply throwa lot of plumbing code at you for you to reuse.</description>
    </item>
    
    <item>
      <title>Elisa - Entity Component System</title>
      <link>https://christianbitter.github.io/post/elisa-entity-component-system/</link>
      <pubDate>Sun, 04 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://christianbitter.github.io/post/elisa-entity-component-system/</guid>
      <description>After quite a while, I have finally made an update to my attempt at using Python and pygame for Game Programming. You will be able to find the newest addition to the Elisa repository in the form of example number 16. In this I take the time to actually create a small entity component system.
The Entity Component System design pattern is data-centric approach to enable building complex game architectures using a compositional metaphor as opposed to the traditional object-oriented decomposition approach.</description>
    </item>
    
    <item>
      <title>Hello Github Pages</title>
      <link>https://christianbitter.github.io/post/2020-08-15-hello-github-pages/</link>
      <pubDate>Sat, 15 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://christianbitter.github.io/post/2020-08-15-hello-github-pages/</guid>
      <description>After some time of the grid, my personal blog is now back online - here on github. As a potential source of inspiration and documentation, I can highly recommend the following blogpost, which enabled me to set this up here - Thanks to Aurora Mareviv and Tales of Fr.
Read you soon!</description>
    </item>
    
  </channel>
</rss>
